<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="admin">
<!-- 혜진_200626_아작스에서 memberlist를 가져오는 sql문 작성 -->
<!-- 혜진_200629_더보기 기능 추가하여 memberlist sql문 작성 -->
<!-- 태규_200630_NVL처리 -->
	<select id="memberList" parameterType="memberSearch"
		resultType="member">
		select *
		from(
			select rownum as rnum, m.*
			from(
				select
					member_no as memberNo,
					NVL(member_Profile, ' ') as memberProfile,
					member_id as memberId,
					member_name as memberName,
					member_nick as memberNick,
					expire_date as expireDate,
					member_level as memberLevel,
					NVL(card, ' ') as card
				from member
				where member_level='1'
				<if test="checkbox1==1">
					and expire_date is null
				</if>
				<if test="checkbox2==1">
					and card is null
				</if>
				and (
					member_id like '%'||#{searchWord}||'%' 
					or member_name like '%'||#{searchWord}||'%' 
					or member_nick like '%'||#{searchWord}||'%')
			)m
		) where (rnum between #{start} and #{end})
	</select>
<!-- 혜진_200629_팝업창에 memberId를 매개변수로 해당 회원 정보를 조회 -->	
	<select id="oneMemberSearch" parameterType="string" resultType="member">
		select
			member_no as memberNo,
			NVL(member_Profile, ' ') as memberProfile,
			member_id as memberId,
			member_name as memberName,
			member_nick as memberNick,
			expire_date as expireDate,
			member_level as memberLevel,
			phone,
			email,
			member_profile as profile,
			card
		from member where member_id = #{_parameter}
	</select>
<!-- 혜진_200629_회원관리 페이지_팝업창_전체 회원 리스트의 수를 세어옴 -->	
	<select id="totalCount" parameterType="memberSearch" resultType="_int">
		select count(member_no) from member
				<if test="memberType!=0">
				where member_level=#{memberType}
				</if>
				<if test="memberType==0">
				where member_level='2' or member_level='3'
				</if>
				<if test="checkbox1==1">
					and expire_date is null
				</if>
				<if test="checkbox2==1">
					and card is null
				</if>
				and (member_id like '%'||#{searchWord}||'%' or member_name like '%'||#{searchWord}||'%' or member_nick like '%'||#{searchWord}||'%')			
	</select>
	<!-- 혜진_200630_회원관리 페이지_팝업창_카드 정보를 수정함 -->
	<update id="cardModify" parameterType="member">
		update member set card=#{card} where member_id=#{memberId}
	</update>
	<!-- 혜진_200630_트레이너 관리 페이지_트레이너 정보 조회 -->
	<select id="trainerList" parameterType="memberSearch"
		resultType="member">
		select *
		from(
			select rownum as rnum, m.*
			from(
				select
					member_no as memberNo,
					NVL(member_Profile, ' ') as memberProfile,
					member_id as memberId,
					member_name as memberName,
					member_nick as memberNick,
					age,
					phone,
					email,
					road_addr as roadAddr,
					det_addr as detAddr,
					enroll_date as enrollDate,
					member_level as memberLevel
				from member
				<if test="memberType!=0">
				where member_level=#{memberType}
				</if>
				<if test="memberType==0">
				where member_level='2' or member_level='3'
				</if>
				<if test="checkbox1==1">
					and expire_date is null
				</if>
				<if test="checkbox2==1">
					and card is null
				</if>
				and (
					member_id like '%'||#{searchWord}||'%' 
					or member_name like '%'||#{searchWord}||'%' 
					or member_nick like '%'||#{searchWord}||'%')
			)m
		) where (rnum between #{start} and #{end})
	</select>
	<!-- 혜진_200630_트레이너 페이지_승인 버튼 클릭 시 멤버 타입 변환 -->
	<update id="trainerApprove" parameterType="string">
		update member set member_level = '3' where member_id = #{_parameter}
	</update>
	<!-- 혜진_200630_트레이너 페이지_승인 버튼 클릭 시 회원 삭제 -->
	<delete id="trainerReject" parameterType="string">
		delete member where member_id = #{_parameter}
	</delete>
	<!-- 혜진_200702_mapping 테이블 검색 -->
	<select id="ptmapping" parameterType="pt" resultType="pt">
	select*from (select rownum as rnum, n.* from(select
		mp.mapping_seq as mappingSeq,
    	NVL(c.member_profile,' ') as trainerProfile,
    	c.member_id as memberId,
    	c.member_name as trainerName,
    	p.category_name as catFirst,
    	q.category_name as catSecond,
    	r.category_name as catThird,
    	NVL(m.member_profile,' ') as memberProfile,
    	m.member_name as memberName,
    	m.expire_date as expireDate,
    	(mp.training_maxcnt-mp.training_cnt) as trainingLeft
	from member_mapping mp 
	join member c on (c.member_no = mp.trainer_no)
	join trainer t on (t.member_no = mp.trainer_no)
	join professional_category p on (p.category_no = t.cat_first)
	join professional_category q on (q.category_no = t.cat_second)
	join professional_category r on (r.category_no = t.cat_third)
	join member m on (m.member_no = mp.member_no)
	where m.expire_date is not null
	<if test="memberType==1">
	and m.member_level=1
	and (m.member_name like '%'||#{searchWord}||'%')
	</if>
	<if test="memberType==3">
	and c.member_level=3
	and (c.member_name like '%'||#{searchWord}||'%')
	</if>
	order by c.member_name
	<if test="checkbox1==1">
	, trainingLeft
	</if>
	)n) where (rnum between #{start} and #{end})
	</select>
	<!-- 혜진_200702_mapping 테이블 자료수 세기 -->
	<select id="ptTotalCount" parameterType="memberSearch" resultType="_int">
	<if test="memberType==1">
	select count (member_no) from member_mapping 
	join member using (member_no)
	where expire_date is not null and (member_name like '%'||#{searchWord}||'%')
	</if>
	<if test="memberType==3">
	select count (expire_date) from (select mp.trainer_no, mp.member_no, m.expire_date from member_mapping mp 
	join member m on (m.member_no = mp.member_no)
	where m.expire_date is not null and (m.member_name like '%'||#{searchWord}||'%'))
	</if>
	</select>
	<!-- 물품등록 -->
	<insert id="productInsert" parameterType="product">
		insert into product values(product_seq.nextval, #{pname}, #{pcontent}, #{price}, #{stock}, #{category}, #{category2}, #{category3}, #{thumbnail})
	</insert>
	<!-- 혜진_200706_mapping테이블 데이터 삭제 -->
	<delete id="mappingDelete" parameterType="_int">
	delete member_mapping where mapping_seq = #{_parameter}
	</delete>
	<!-- 혜진_200706_mapping신규 등록_회원 찾기 -->
	<select id="mappingFind" parameterType="memberSearch" resultType="member">
	select *
		from(
			select rownum as rnum, m.*
			from(
				select
					NVL(member_Profile, ' ') as memberProfile,
					member_id as memberId,
					member_no as memberNo,
					member_name as memberName,
					age,
					phone,
					email,
					road_addr as roadAddr,
					det_addr as detAddr,
					member_level as memberLevel
				from member
				where member_level=#{memberType}
				<if test="memberType==1">
					and expire_date is not null
				</if>
				and (
					member_id like '%'||#{searchWord}||'%' 
					or member_name like '%'||#{searchWord}||'%')
			)m
		) 
	</select>
	<!-- 혜진_200707_mapping신규 등록_등록 -->
	<insert id="inputNewMapping" parameterType="pt">
	insert into member_mapping values (member_mapping_seq.nextval,#{memberNo},#{trainerNo},#{PTleft},#{PTmax},null)
	</insert>
	<!-- 혜진_200713_mapping업데이트 -->
	<update id="updateNewMapping" parameterType="pt">
	update member_mapping set member_no=#{memberNo}, trainer_no=#{trainerNo}, training_cnt=#{PTleft}, training_maxcnt=#{PTmax}
	where mapping_seq = #{mappingSeq}
	</update>
	<!-- 혜진_200707_mapping 데이터 수정 -->
	<select id="mappingCheck" parameterType="_int" resultType="pt">
	select
		mp.member_no as memberNo,
		m.member_name as memberName,
		mp.trainer_no as trainerNo,
		t.member_name as trainerName,
		mp.training_cnt as PTleft,
		mp.training_maxcnt as PTmax
	from member_mapping mp
	join member m on (m.member_no = mp.member_no)
	join member t on (t.member_no = mp.member_no)
	where mapping_seq = #{mpSeq}
	</select>
	<!-- 혜진_200708_신고글 조회 -->
	<select id="reportlist" parameterType="adminReport" resultType="adminReport">
	select*from (select rownum as rnum, m.* 
	from(select distinct
        k.reportCnt as reportCnt,
		r.write_no as writeNo,
    	m.member_id as reportedId,
    	m.member_nick as reportedName,
   	 	r.write_type as writeType,
    	b.board_title as boar8dTitle
	from report r
	join member m on (m.member_no = r.reported_no)
	join member t on (t.member_no = r.member_no)
	join board b on (b.board_no = r.write_no)
    join (select r.write_no as write_no, r.write_type as write_type, count(*) as reportCnt from report r
        	join board b on (b.board_no = r.write_no)
        	<trim prefix="where" prefixOverrides="and">
				<if test="writeType!=0">
				r.write_type =#{writeType} 
				</if>
				<if test="reportCat!=0">
				and (r.report_cat=#{reportCat})
				</if>
				and (b.board_title like '%'||#{searchWord}||'%')
				</trim>
				group by r.write_no, r.write_type)k on (k.write_no = r.write_no and k.write_type = r.write_type)
	<trim prefix="where" prefixOverrides="and">
		<if test="writeType!=0">
		r.write_type =#{writeType} 
		</if>
		<if test="reportCat!=0">
		and (r.report_cat=#{reportCat})
		</if>
		and (b.board_title like '%'||#{searchWord}||'%')
		</trim>
    order by reportCnt desc
	)m)
	where (rnum between #{start} and #{end})
	</select>	
	<!-- 혜진_200708_신고글 전체 수 조회 -->
	<select id="totalReportlist" parameterType="adminReport" resultType="_int">
	select count(*) from(select r.write_no, r.write_type, count(*) as reportCnt from report r
	join board b on (b.board_no = r.write_no)
	where (b.board_title like '%'||#{searchWord}||'%') 
	<if test="writeType!=0">
	and r.write_type =#{writeType} 
	</if>
	<if test="reportCat!=0">
	and (r.report_cat=#{reportCat})
	</if>
	group by r.write_no, r.write_type)
	</select>
	<!-- 태규_200708_상품 관리 페이지 -->
	<update id="productModify" parameterType="product">
		update product set
			pname = #{pname},
			pcontent = #{pcontent},
			price = #{price},
			stock = #{stock},
			category = #{category},
			category2 = #{category2},
			category3 = #{category3},
			thumbnail = #{thumbnail}
		where pno = #{pno}
	</update>
	<delete id="productDelete">
		delete from product where pno in
		<foreach collection="array" item="pno" open="(" separator="," close=")">
			#{pno}
		</foreach>
	</delete>
	<!-- 혜진_200709_신고 관리 페이지_본문 글 삭제-->
	<delete id="deleteReport" parameterType="java.util.HashMap">
		delete from
		<if test="writeType==1">
		board
		where board_no=#{writeNo}
		</if> 
		<if test="writeType==2">
		board_comment
		where comment_no=#{writeNo}
		</if> 
	</delete>
	<!-- 혜진_200709_신고관리 페이지_선택 다중 삭제_신고관리 테이블 글삭제 -->
	<delete id="deleteReportTB" parameterType="java.util.HashMap">
		delete from report where write_type=#{writeType} and write_no=#{writeNo}
	</delete>
	<!-- 혜진_200709_예약 목록 관리 페이지_전체 게시물 갯수 -->
	<select id="meetingTotalCount" parameterType="ms" resultType="_int">
		select count(*) from meeting_schedule
		<if test="responseFin==1">
			where response_fin !=0
		</if>
		<if test="responseFin==2">
			where response_fin =0
		</if>
	</select>
	<!-- 혜진_200709_예약 목록 관리 페이지_게시물 조회 -->
	<select id="meetinglist" parameterType="ms" resultType="ms">
		select*from(select rownum as rnum, ms.* from(select 
    		meeting_seq as meetingSeq,
    		name,
    		phone,
    		email,
    		NVL(bmi,'0.00') as bmi,
    		response_fin as responseFin
		from meeting_schedule
		<if test="responseFin==1">
			where response_fin !=0
		</if>
		<if test="responseFin==2">
			where response_fin =0
		</if>
		order by meeting_seq 
		<if test="sorting==0">
		desc
		</if>
		)ms)
		where rnum between #{start} and #{end}
	</select>
	<!-- 혜진_200710_완료 클릭 시, 응답 완료 상태로 변경 -->
	<update id="finResponse" parameterType="ms">
		update meeting_schedule set response_fin = #{responseFin} where meeting_seq = #{meetingSeq}
	</update>
	<!-- 혜진_200710_예약 목록 페이지_선택 다중 삭제 -->
	<delete id="deleteMeeting" parameterType="ms">
		delete meeting_schedule where meeting_seq in
		<foreach item="meetingSeq" collection="array" open="(" separator="," close=")">
			#{meetingSeq}
		</foreach>
	</delete>

	<!-- 태규_200709_구매 관리 -->
	<select id="totalPurchaseCount" parameterType="map" resultType="_int">
		select count(*) from purchase
		<if test="type == 1">
			where delivery_bool = 0
		</if>
	</select>
	<select id="selectPurchaseList" parameterType="map" resultType="purchase">
		select * from (
		    select rownum as rnum, PS.*
		    from (
		        select S.*, pname, thumbnail, member_Id as memberId from(
		            select 
		            	buy_no as buyNo,
		                member_no as memberNo, 
		                buy_addr as buyAddr,
		                total_price as totalPrice,
		                delivery_bool as deliveryBool,
		                invoice_number as invoiceNumber, 
		                buy_date as buyDate,
			            (
			                select count(*) - 1 
			                from BUY_PRODUCT 
			                where BUY_PRODUCT.buy_no = PURCHASE.buy_no 
			            ) as count, (
			                select min(pno)
			                from BUY_PRODUCT 
			                where BUY_PRODUCT.buy_no = PURCHASE.buy_no 
			            ) as pno
		            from PURCHASE
		            <if test="type == 1">
						where delivery_bool = 0
					</if>
		        ) S
		        join PRODUCT P on (S.pno = p.pno)
		        join Member M on (S.memberNo = M.member_No)
		        order by buyNo desc) 
		    PS
		) where rnum BETWEEN #{start} and #{end}
	</select>
	<!-- 혜진_200710_회원 정리 관리 페이지_전체 게시물 수 조회 -->
	<select id="penaltyTotalCount" parameterType="adminReport" resultType="_int">
	select count(*) from
	(select distinct
        reported_no
		from report r
		join member m on (r.Reported_No = m.member_no)
	where (member_name like '%'||#{searchWord}||'%' or member_id like '%'||#{searchWord}||'%') 
	<if test="memberType!=0">
	and m.member_level=#{memberType}
	</if>
	and (select count(*) from report where reported_no = r.reported_no)>=3)
	</select>
	<!-- 혜진_200710_회원 정지 관리 페이지_내용 조회 -->
	<select id="penaltylist" parameterType="adminReport" resultType="adminReport">
	select*from(select rownum as rnum, n.* from
	(select distinct
        reported_no as reportedNo, 
        member_id as reportedId, 
        member_name as reportedName,
        member_level as memberType, 
        (select count(*) from report where write_type = 1 and reported_no = r.reported_no) as boardCnt,
        (select count(*) from report where write_type = 2 and reported_no = r.reported_no) as commentCnt,
        (select count(*) from report where reported_no = r.reported_no) as totalReportRec
        from report r
	join member m on (r.Reported_No = m.member_no)
	where (member_name like '%'||#{searchWord}||'%' or member_id like '%'||#{searchWord}||'%')
	<if test="memberType!=0">
	and m.member_level=#{memberType}
	</if>
	and (select count(*) from report where reported_no = r.reported_no)>=3
	order by totalReportRec 
	<if test="sorting==1">
	desc
	</if>
	)n) where rownum between #{start} and #{end}
	</select>
	<!-- 혜진_200710_회원 정지 관리 페이지_선택 다중 삭제 -->
	<delete id="deletePenalty" parameterType="adminReport">
		delete report where reported_no in
		<foreach item="penaltyArr" collection="array" open="(" separator="," close=")">
			#{penaltyArr}
		</foreach>
	</delete>
	<!--태규-->
	<update id="modifyInvoiceNumber" parameterType="purchase">
		update purchase set invoice_number = #{invoiceNumber}, delivery_bool = 1 where buy_no = #{buyNo}
	</update>
	<!-- 혜진_200710_회원 정지 관리 페이지_글작성 권한 정지 -->
	<insert id="givePenalty" parameterType="_int">
		insert into ban_list values (ban_list_seq.nextval, #{_parameter}, sysdate+14)
	</insert>
	<!-- 혜진_200710_회원 정지 관리 페이지_권한이 정지된 회원 표시 -->
	<select id="banListCheck" resultType="adminReport">
	select reported_no as reportedNo from report r join ban_list b on (b.member_no=r.reported_no) group by reported_no
	</select>
	<!-- 혜진_200710_신고글 관리_상세보기 modal_조회 -->
	<select id="reportedDetail" parameterType="adminReport" resultType="adminReport">
	select
	<if test="writeType==1">
	b.board_title as boardTitle, b.board_content as boardContent
	from report r join board b on (b.board_no = r.write_no)
	where r.write_no=#{writeNo}
	group by b.board_title, b.board_content
	</if>
	<if test="writeType==2">
	c.comment_content as commentContent
	from report r join board_comment c on (c.comment_no = r.write_no)
	where r.write_no=#{writeNo}
	group by c.comment_content
	</if>
	</select>
	<!-- 혜진_200713_신고글 관리_상세보기 modal_reportlist 조회_totalList -->
	<select id="reportedDetailListTotal" parameterType="adminReport" resultType="_int">
	select count(member_no) from report where write_type=#{writeType} and write_no=#{writeNo}
	</select>
	<!-- 혜진_200713_신고글 관리_상세보기 modal_reportlist 조회 -->
	<select id="reportedDetailList" parameterType="adminReport" resultType="adminReport">
	select*from (select rownum as rnum, n.* from(
		select
   			m.member_nick as memberNick,
    		c.report_cat as categoryName,
    		r.report_detail as reportDetail 
		from report r
		join member m on (m.member_no=r.member_no) 
		join report_cat c on (r.report_cat = c.report_no) 
		where write_type=#{writeType} and write_no=#{writeNo} 
	)n) where rnum between #{start} and #{end}
	</select>
</mapper>
