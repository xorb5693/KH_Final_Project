<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="member">
	<select id="selectMember" resultType="member" parameterType="member">
		select
			member_no as memberNo,
			member_id as memberId,
			member_pw as memberPw,
			member_name as memberName,
			member_nick as memberNick,
			zip,
			road_addr as roadAddr,
			det_addr as detAddr,
			card,
			enroll_date as enrollDate,
			member_level as memberLevel,
			gender,
			age,
			member_profile as memberProfile,
			email,
			expire_date as expireDate,
			phone,
			email_verification as emailVerification
		from member where member_id = #{memberId}
		<if test="memberPw != null and !memberPw.equals('')">
			and member_pw = #{memberPw}
		</if> 
	</select>
	<insert id="insertMember" parameterType="member">
		insert into member values(
			member_seq.nextval,
			#{memberId},
			#{memberPw},
			#{memberName},
			#{zip},
			#{roadAddr},
			#{detAddr},
			#{card},
			sysdate,
			#{gender},
			#{age},
			#{memberProfile},
			#{email},
			#{expireDate},
			#{phone},
			0
			)
	</insert>
	<select id="checkId" parameterType="member" resultType="member">
		select member_id from member where member_id like #{memberId}
	</select>
	<select id="selectAduino" parameterType="string" resultType="member">
		select 
			member_no as memberNo, 
			member_id as memberId,
			expire_date as expireDate
		from member 
		where card = #{_parameter} 
	</select>
	<select id="selectMemberName" parameterType="_int" resultType="string">
		select member_name from member where member_no = #{_parameter}
	</select>
	<select id="selectMemberNick" parameterType="_int" resultType="member">
		select member_no as memberNo, member_nick as memberNick from member where member_no = #{_parameter}
	</select>
	<select id="selectAdmin" resultType="member">
		select 
			member_no as memberNo, 
			member_nick as memberNick 
		from member 
		where member_level = 4
	</select>
	<select id="selectMappingList" parameterType="_int" resultType="mapping">
		select 
			mapping_seq as mappingSeq,
			member_no as memberNo,
			trainer_no as trainerNo,
			training_cnt as trainingCnt, 
			training_maxcnt as trainingMaxcnt,
			training_postscript as trainingPostscript
		from member_mapping
		where member_no = #{_parameter}
		order by MAPPING_SEQ desc
	</select>
	<update id="insertPostscript" parameterType="mapping">
		update member_mapping set training_postscript = #{trainingPostscript} where mapping_seq = #{mappingSeq}
	</update>
	<select id="selectMappingMemberNoList" parameterType="member" resultType="_int">
		select
			<if test="memberLevel == 1">
				trainer_no
			</if>
			<if test="memberLevel == 3">
				member_no
			</if>
		from member_mapping
		where training_cnt != training_maxcnt
		<if test="memberLevel == 1">
			and member_no = #{memberNo}
		</if>
		<if test="memberLevel == 3">
			and trainer_no = #{memberNo}
		</if>
	</select>
</mapper>
