<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="mail">
	<insert id="insertMail">
		insert into mail values(mail_seq.nextval, #{sender}, #{receiver}, #{mailContent}, sysdate, 0)
	</insert>
	<select id="selectTotalReciveCount" parameterType="map" resultType="_int">
		select count(*) from mail where receiver = #{memberNo}
	</select>
	<select id="selectReceiveMailList" parameterType="map" resultType="mail">
		select *
		from (
		    select rownum as rnum, m.*
		    from(
		        select
		            mail_no as mailNo,
		            READ_COUNT as readCount,
		            member_nick as memberNick,
		            mail_content as mailContent,
		            write_date as writeDate
		        from mail
		        join member on (sender = member_no)
		        where receiver = #{memberNo}
		        order by mail_no desc
		    ) m
		) where rnum between #{start} and #{end}
	</select>
	<select id="selectTotalSendCount" parameterType="map" resultType="_int">
		select count(*) from mail where sender = #{memberNo}
	</select>
	<select id="selectSendMailList" parameterType="map" resultType="mail">
		select *
		from (
		    select rownum as rnum, m.*
		    from(
		        select
		            mail_no as mailNo,
		            READ_COUNT as readCount,
		            member_nick as memberNick,
		            mail_content as mailContent,
		            write_date as writeDate
		        from mail
		        join member on (receiver = member_no)
		        where sender = #{memberNo}
		        order by mail_no desc
		    ) m
		) where rnum between #{start} and #{end}
	</select>
	<update id="readMailUpdate" parameterType="_int">
		update mail set read_count = read_count + 1 where mail_no = #{_parameter}
	</update>
	<select id="readMail" parameterType="map" resultType="mail">
		select
			mail_no as mailNo,
			read_count as readCount,
			member_nick as memberNick,
			member_id as memberId,
			mail_content as mailContent,
			write_date as writeDate,
			sender,
			receiver
		from mail
		join member on (
		<if test="readType == 0">
			sender = member_no
		</if>
		<if test="readType == 1">
			receiver = member_no
		</if>
		)
		where mail_no = #{mailNo}
	</select>
	<delete id="deleteMail">
		delete from mail where mail_no in
		<foreach collection="array" item="mailNo" open="(" separator="," close=")">
			#{mailNo}
		</foreach>
	</delete>
</mapper>
